<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!-- 设定用户的登录链接，这里为cas登录页面的链接地址可配置回调地址 -->
        <property name="loginUrl" value="${shiro.loginUrl}" />
        <property name="unauthorizedUrl" value="/unauthorized.do" />
        <property name="filters">
            <map>
                <!-- 添加casFilter到shiroFilter -->
                <entry key="casFilter" value-ref="casFilter" />
                <entry key="logoutFilter" value-ref="logoutFilter" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /login = casFilter
                /logout = logoutFilter
                /exception/** = anon
                /error_info.jsp = anon
                /** = authc
            </value>
        </property>
    </bean>

    <!--  shiro为集成springMvc 拦截异常 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 这里你可以根据需要定义N多个错误异常转发 -->
                <prop key="org.apache.shiro.authz.AuthorizationException">
                    redirect:/exception/unauthorized
                </prop>
                <prop key="org.apache.shiro.authc.AccountException">  <!--表示捕获的异常-->
                    redirect:/exception/UnknownAccount  <!-- 捕获该异常时跳转的路径 -->
                </prop>
            </props>
        </property>
    </bean>

    <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
        <property name="successUrl" value="/index" />
        <!-- 配置验证错误时的失败页面 -->
        <property name="failureUrl" value="${shiro.failureUrl}" />
    </bean>

    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <!-- 配置验证错误时的失败页面 -->
        <property name="redirectUrl" value="${shiro.logoutUrl}" />
    </bean>

    <bean id="casRealm" class="admin.realm.UserRealm">
        <!-- 认证通过后的默认角色 -->
        <property name="defaultRoles" value="ROLE_USER" />
        <!-- cas服务端地址前缀 -->
        <property name="casServerUrlPrefix" value="${shiro.cas.serverUrlPrefix}" />
        <!-- 应用服务地址，用来接收cas服务端票据 -->
        <property name="casService" value="${shiro.cas.service}" />
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- <property name="sessionManager" ref="sessionManager" /> -->
        <property name="subjectFactory" ref="casSubjectFactory"></property>
        <property name="realm" ref="casRealm" />
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="org.apache.shiro.SecurityUtils.setSecurityManager"></property>
        <property name="arguments" ref="securityManager"></property>
    </bean>

    <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"></bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

</beans>